# Scientist
# Example: Our science unit/science drone/scientist has found a...
defined_text = {
    name = GetScientist
    text = {
        trigger = {
            has_authority = auth_machine_intelligence
        }
        localization_key = getscientist_machine
    }
    text = {
        trigger = {
            has_authority = auth_hive_mind
        }
        localization_key = getscientist_hive
    }
    # Custom gestalt types
    text = {
        trigger = {
            OR = {
                has_authority = auth_meritmind
                has_authority = auth_paramind
            }
        }
        localization_key = science_ship_paramind
    }
    text = {
        trigger = {
            OR = {
                has_authority = auth_overmind
                has_authority = auth_onemind
            }
        }
        localization_key = science_ship_onemind
    }
    text = {
        trigger = {
            NOT = { has_ethic = ethic_gestalt_consciousness }
        }
        localization_key = getscientist_normal
    }
}



# Scientists
# Example: Our science units/science drones/scientists have reported that...
defined_text = {
    name = GetScientistPlural
    text = {
        trigger = {
            has_authority = auth_machine_intelligence
        }
        localization_key = getscientistplural_machine
    }
    text = {
        trigger = {
            has_authority = auth_hive_mind
        }
        localization_key = getscientistplural_hive
    }
    # Custom gestalt types
    text = {
        trigger = {
            OR = {
                has_authority = auth_meritmind
                has_authority = auth_paramind
            }
        }
        localization_key = science_ship_paramindplural
    }
    text = {
        trigger = {
            OR = {
                has_authority = auth_overmind
                has_authority = auth_onemind
            }
        }
        localization_key = science_ship_onemindplural
    }
    text = {
        trigger = {
            NOT = { has_ethic = ethic_gestalt_consciousness }
        }
        localization_key = getscientistplural_normal
    }
}

# Engineer
# Example: Our engineering unit/engineering drone/engineer has found a...
defined_text = {
    name = GetEngineer
    text = {
        trigger = {
            has_authority = auth_machine_intelligence
        }
        localization_key = getengineer_machine
    }
    text = {
        trigger = {
            has_authority = auth_hive_mind
        }
        localization_key = getengineer_hive
    }
    # Custom gestalt types
    text = {
        trigger = {
            OR = {
                has_authority = auth_meritmind
                has_authority = auth_paramind
            }
        }
        localization_key = engineer_ship_paramind
    }
    text = {
        trigger = {
            OR = {
                has_authority = auth_overmind
                has_authority = auth_onemind
            }
        }
        localization_key = engineer_ship_onemind
    }
    text = {
        trigger = {
            NOT = { has_ethic = ethic_gestalt_consciousness }
        }
        localization_key = getengineer_normal
    }
}

# Engineers
# Example: Our engineering units/engineering drones/engineers have reported that...
defined_text = {
    name = GetEngineerPlural
    text = {
        trigger = {
            has_authority = auth_machine_intelligence
        }
        localization_key = getengineerplural_machine
    }
    text = {
        trigger = {
            has_authority = auth_hive_mind
        }
        localization_key = getengineerplural_hive
    }
    # Custom gestalt types
    text = {
        trigger = {
            OR = {
                has_authority = auth_meritmind
                has_authority = auth_paramind
            }
        }
        localization_key = engineer_ship_paramindplural
    }
    text = {
        trigger = {
            OR = {
                has_authority = auth_overmind
                has_authority = auth_onemind
            }
        }
        localization_key = engineer_ship_onemindplural
    }
    text = {
        trigger = {
            NOT = { has_ethic = ethic_gestalt_consciousness }
        }
        localization_key = getengineerplural_normal
    }
}

# Envoy
# Example: Our diplomatic unit/diplomatic drone/envoy has found a...
defined_text = {
    name = GetEnvoy
    text = {
        trigger = {
            has_authority = auth_machine_intelligence
        }
        localization_key = getenvoy_machine
    }
    text = {
        trigger = {
            has_authority = auth_hive_mind
        }
        localization_key = getenvoy_hive
    }
    # Custom gestalt types
    text = {
        trigger = {
            OR = {
                has_authority = auth_meritmind
                has_authority = auth_paramind
            }
        }
        localization_key = envoy_paramind
    }
    text = {
        trigger = {
            OR = {
                has_authority = auth_overmind
                has_authority = auth_onemind
            }
        }
        localization_key = envoy_onemind
    }
    text = {
        trigger = {
            NOT = { has_ethic = ethic_gestalt_consciousness }
        }
        localization_key = getenvoy_normal
    }
}

# Envoy
# Example: Our diplomatic unit/diplomatic drone/envoy has found a...
defined_text = {
    name = GetEnvoyCap
    text = {
        trigger = {
            has_authority = auth_machine_intelligence
        }
        localization_key = getenvoycap_machine
    }
    text = {
        trigger = {
            has_authority = auth_hive_mind
        }
        localization_key = getenvoycap_hive
    }
    # Custom gestalt types
    text = {
        trigger = {
            OR = {
                has_authority = auth_meritmind
                has_authority = auth_paramind
            }
        }
        localization_key = envoy_paramindcap
    }
    text = {
        trigger = {
            OR = {
                has_authority = auth_overmind
                has_authority = auth_onemind
            }
        }
        localization_key = envoy_onemindcap
    }
    text = {
        trigger = {
            NOT = { has_ethic = ethic_gestalt_consciousness }
        }
        localization_key = getenvoycap_normal
    }
}

# Envoys
# Example: Our diplomatic units/diplomatic drones/envoys have reported that...
defined_text = {
    name = GetEnvoyPlural
    text = {
        trigger = {
            has_authority = auth_machine_intelligence
        }
        localization_key = getenvoyplural_machine
    }
    text = {
        trigger = {
            has_authority = auth_hive_mind
        }
        localization_key = getenvoyplural_hive
    }
    # Custom gestalt types
    text = {
        trigger = {
            OR = {
                has_authority = auth_meritmind
                has_authority = auth_paramind
            }
        }
        localization_key = envoy_paramindplural
    }
    text = {
        trigger = {
            OR = {
                has_authority = auth_overmind
                has_authority = auth_onemind
            }
        }
        localization_key = envoy_onemindplural
    }
    text = {
        trigger = {
            NOT = { has_ethic = ethic_gestalt_consciousness }
        }
        localization_key = getenvoyplural_normal
    }
}

# Example: Our linguists/language drones/linguistic algoriths...
defined_text = {
    name = GetLinguists
    text = {
        trigger = {
            has_authority = auth_machine_intelligence
        }
        localization_key = getlinguists_machine
    }
    text = {
        trigger = {
            has_authority = auth_hive_mind
        }
        localization_key = getlinguists_hive
    }
    # Custom gestalt types
    text = {
        trigger = {
            OR = {
                has_authority = auth_meritmind
                has_authority = auth_paramind
            }
        }
        localization_key = linguist_paramindplural
    }
    text = {
        trigger = {
            OR = {
                has_authority = auth_overmind
                has_authority = auth_onemind
            }
        }
        localization_key = linguist_onemindplural
    }
    text = {
        trigger = {
            NOT = { has_ethic = ethic_gestalt_consciousness }
        }
        localization_key = getlinguists_normal
    }
}

# Example: Our researchers/research drones/research subroutines...
defined_text = {
    name = GetResearchers
    text = {
        trigger = {
            OR = {
                AND = {
                    is_scope_type = agreement
                    exists = owner
                    owner = { has_authority = auth_machine_intelligence }
                }
                AND = {
                    is_scope_type = country
                    has_authority = auth_machine_intelligence
                }
            }
        }
        localization_key = getresearchers_machine
    }
    text = {
        trigger = {
            OR = {
                AND = {
                    is_scope_type = agreement
                    exists = owner
                    owner = { has_authority = auth_hive_mind }
                }
                AND = {
                    is_scope_type = country
                    has_authority = auth_hive_mind
                }
            }
        }
        localization_key = getresearchers_hive
    }
    text = {
        trigger = {
            OR = {
                AND = {
                    is_scope_type = agreement
                    exists = owner
                    OR = {
                        owner = { has_authority = auth_paramind }
                        owner = { has_authority = auth_meritmind }
                    }
                }
                AND = {
                    is_scope_type = country
                    OR = {
                        owner = { has_authority = auth_paramind }
                        owner = { has_authority = auth_meritmind }
                    }
                }
            }
        }
        localization_key = researcher_paramindplural
    }
    text = {
        trigger = {
            OR = {
                AND = {
                    is_scope_type = agreement
                    exists = owner
                    OR = {
                        owner = { has_authority = auth_onemind }
                        owner = { has_authority = auth_overmind }
                    }
                }
                AND = {
                    is_scope_type = country
                    OR = {
                        owner = { has_authority = auth_onemind }
                        owner = { has_authority = auth_overmind }
                    }
                }
            }
        }
        localization_key = researcher_onemindplural
    }
    text = {
        trigger = {
            OR = {
                AND = {
                    is_scope_type = agreement
                    exists = owner
                    owner = { NOT = { has_ethic = ethic_gestalt_consciousness } }
                }
                AND = {
                    is_scope_type = country
                    NOT = { has_ethic = ethic_gestalt_consciousness }
                }
            }
        }
        localization_key = getresearchers_normal
    }
}

# Example: A team member/drone/unit...
defined_text = {
    name = GetTeamMember
    text = {
        trigger = {
            has_authority = auth_machine_intelligence
        }
        localization_key = unit_key
    }
    text = {
        trigger = {
            has_authority = auth_hive_mind
        }
        localization_key = drone_key
    }
    # Custom gestalt types
    text = {
        trigger = {
            OR = {
                has_authority = auth_meritmind
                has_authority = auth_paramind
            }
        }
        localization_key = teammember_paramind
    }
    text = {
        trigger = {
            OR = {
                has_authority = auth_overmind
                has_authority = auth_onemind
            }
        }
        localization_key = teammember_onemind
    }
    text = {
        trigger = {
            NOT = { has_ethic = ethic_gestalt_consciousness }
        }
        localization_key = team_member_key
    }
}

defined_text = {
    name = GetTeamMemberPlural
    text = {
        trigger = {
            has_authority = auth_machine_intelligence
        }
        localization_key = units_key
    }
    text = {
        trigger = {
            has_authority = auth_hive_mind
        }
        localization_key = drones_key
    }
    # Custom gestalt types
    text = {
        trigger = {
            OR = {
                has_authority = auth_meritmind
                has_authority = auth_paramind
            }
        }
        localization_key = teammember_paramindplural
    }
    text = {
        trigger = {
            OR = {
                has_authority = auth_overmind
                has_authority = auth_onemind
            }
        }
        localization_key = teammember_onemindplural
    }
    text = {
        trigger = {
            NOT = { has_ethic = ethic_gestalt_consciousness }
        }
        localization_key = team_members_key
    }
}

defined_text = { # Country scope
    name = GetUnitDrone
    text = {
        trigger = {
            has_authority = auth_machine_intelligence
        }
        localization_key = getunitdrone_unit
    }
    text = {
        trigger = {
            has_authority = auth_hive_mind
        }
        localization_key = getunitdrone_drone
    }
    # Custom gestalt types
    text = {
        trigger = {
            OR = {
                has_authority = auth_meritmind
                has_authority = auth_paramind
            }
        }
        localization_key = unitdrone_paramind
    }
    text = {
        trigger = {
            OR = {
                has_authority = auth_overmind
                has_authority = auth_onemind
            }
        }
        localization_key = unitdrone_onemind
    }
    text = {	# fallback if not Gestalt Consciousness
        trigger = {
            NOT = { has_ethic = ethic_gestalt_consciousness }
        }
        localization_key = getunitdrone_leader
    }
}

defined_text = { # Country scope
    name = GetUnitDronePlural
    text = {
        trigger = {
            has_authority = auth_machine_intelligence
        }
        localization_key = getunitdrone_unit_plural
    }
    text = {
        trigger = {
            has_authority = auth_hive_mind
        }
        localization_key = getunitdrone_drone_plural
    }
    # Custom gestalt types
    text = {
        trigger = {
            OR = {
                has_authority = auth_meritmind
                has_authority = auth_paramind
            }
        }
        localization_key = unitdrone_paramindplural
    }
    text = {
        trigger = {
            OR = {
                has_authority = auth_overmind
                has_authority = auth_onemind
            }
        }
        localization_key = unitdrone_onemindplural
    }
    text = {	# fallback if not Gestalt Consciousness
        trigger = {
            NOT = { has_ethic = ethic_gestalt_consciousness }
        }
        localization_key = getunitdrone_leader_plural
    }
}
defined_text = {
    name = GetTerraformer
    text = {
        trigger = {
            has_authority = auth_machine_intelligence
        }
        localization_key = getterraformer_machine
    }
    text = {
        trigger = {
            has_authority = auth_hive_mind
        }
        localization_key = getterraformer_hive
    }
    # Custom gestalt types
    text = {
        trigger = {
            OR = {
                has_authority = auth_meritmind
                has_authority = auth_paramind
            }
        }
        localization_key = terraformer_paramind
    }
    text = {
        trigger = {
            OR = {
                has_authority = auth_overmind
                has_authority = auth_onemind
            }
        }
        localization_key = terraformer_onemind
    }
    text = {
        trigger = {
            NOT = { has_ethic = ethic_gestalt_consciousness }
        }
        localization_key = getterraformer_normal
    }
}

defined_text = {
    name = GetTerraformerPlural
    text = {
        trigger = {
            has_authority = auth_machine_intelligence
        }
        localization_key = getterraformer_machine_plural
    }
    text = {
        trigger = {
            has_authority = auth_hive_mind
        }
        localization_key = getterraformer_hive_plural
    }
    # Custom gestalt types
    text = {
        trigger = {
            OR = {
                has_authority = auth_meritmind
                has_authority = auth_paramind
            }
        }
        localization_key = terraformer_paramindplural
    }
    text = {
        trigger = {
            OR = {
                has_authority = auth_overmind
                has_authority = auth_onemind
            }
        }
        localization_key = terraformer_onemindplural
    }
    text = {
        trigger = {
            NOT = { has_ethic = ethic_gestalt_consciousness }
        }
        localization_key = getterraformer_normal_plural
    }
}

defined_text = { # Country scope
    name = GetBrainName
    text = {
        trigger = {
            has_authority = auth_machine_intelligence
        }
        localization_key = getbrainname_machine
    }
    text = {
        trigger = {
            OR = {
                # Overmind uses the brain name "overmind" like others
                has_authority = auth_overmind
                has_authority = auth_hive_mind
            }
        }
        localization_key = getbrainname_hive
    }
    # Custom gestalt types
    text = {
        trigger = {
            OR = {
                has_authority = auth_meritmind
                has_authority = auth_paramind
            }
        }
        localization_key = brainname_paramind
    }
    text = {
        trigger = {
            has_authority = auth_onemind
        }
        
        localization_key = brainname_onemind
    }
    text = {	# fallback if not Gestalt Consciousness
        trigger = {
            NOT = { has_ethic = ethic_gestalt_consciousness }
        }
        localization_key = getbrainname_error
    }
}

# Sensory workers
define_text = {
	name = GetSensoryWorkers
	text = {
		trigger = { is_gestalt = no }
		localization_key = sensor_operatior
	}
	text = {
		trigger = { has_authority = auth_hive_mind }
		localization_key = sensory_drones
	}
    # Custom gestalt types
    text = {
        trigger = {
            OR = {
                has_authority = auth_meritmind
                has_authority = auth_paramind
            }
        }
        localization_key = sensorydrones_paramind
    }
    text = {
        trigger = {
            OR = {
                has_authority = auth_overmind
                has_authority = auth_onemind
            }
        }
        localization_key = sensorydrones_onemind
    }
	text = {
		trigger = { has_authority = auth_machine_intelligence }
		localization_key = observation_subroutines
	}
}



# All the changes that refer to gestalts generally but not to authorities specifically
# just one lol

defined_text = {
	name = GetTradingHubType
	text = {
		trigger = {
			has_ethic = ethic_gestalt_consciousness
		}
		localization_key = sm_trading_hub_gestalt
	}
    text = {
        trigger = {
            OR = {
                has_authority = auth_meritmind
                has_authority = auth_paramind
            }
        }
        localization_key = tradinghub_paramind
    }
	text = {
		trigger = {
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		localization_key = sm_trading_hub
	}
}


